# PIP 설치
sudo apt install python3-dev python3-pip
pip install -U --user pip

# CUDA 12.4
wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
wget https://developer.download.nvidia.com/compute/cuda/12.4.1/local_installers/cuda-repo-ubuntu2204-12-4-local_12.4.1-550.54.15-1_amd64.deb
sudo dpkg -i cuda-repo-ubuntu2204-12-4-local_12.4.1-550.54.15-1_amd64.deb
sudo cp /var/cuda-repo-ubuntu2204-12-4-local/cuda-*-keyring.gpg /usr/share/keyrings/
sudo apt-get update
sudo apt-get -y install cuda-toolkit-12-4

# CUDA 12.8 우분투 24.04
wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-ubuntu2404.pin
sudo mv cuda-ubuntu2404.pin /etc/apt/preferences.d/cuda-repository-pin-600
wget https://developer.download.nvidia.com/compute/cuda/12.8.1/local_installers/cuda-repo-ubuntu2404-12-8-local_12.8.1-570.124.06-1_amd64.deb
sudo dpkg -i cuda-repo-ubuntu2404-12-8-local_12.8.1-570.124.06-1_amd64.deb
sudo cp /var/cuda-repo-ubuntu2404-12-8-local/cuda-*-keyring.gpg /usr/share/keyrings/
sudo apt-get update
sudo apt-get -y install cuda-toolkit-12-8


# 엔비디아 드라이버 (택1)
sudo apt-get install -y nvidia-open
sudo apt-get install -y cuda-drivers

# cuDNN
wget https://developer.download.nvidia.com/compute/cudnn/9.1.0/local_installers/cudnn-local-repo-ubuntu2204-9.1.0_1.0-1_amd64.deb
sudo dpkg -i cudnn-local-repo-ubuntu2204-9.1.0_1.0-1_amd64.deb
sudo cp /var/cudnn-local-repo-ubuntu2204-9.1.0/cudnn-*-keyring.gpg /usr/share/keyrings/
sudo apt-get update
sudo apt-get -y install cudnn-cuda-12 <- CUDA가 12일 경우

# 환경변수 수동 설정
자동 실행 스크립트 수정 (.bashrc, .zshrc)

export CUDNN_PATH=$HOME/(파이썬환경)/lib/(python3.11)/site-packages/nvidia/cudnn
export LD_LIBRARY_PATH=$CUDNN_PATH/lib:/usr/local/cuda/lib64
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/extras/CUPTI/lib64

export PATH=:/usr/local/nvidia/bin:/usr/local/cuda/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH



# NUMA 경고 메세지
lspci | grep -i nvidia <- 디바이스 확인

yjg1005@yjgserver:~$ lspci | grep -i nvidia
08:00.0 VGA compatible controller: NVIDIA Corporation GA102 [GeForce RTX 3090] (rev a1)
08:00.1 Audio device: NVIDIA Corporation GA102 High Definition Audio Controller (rev a1)

VGA인 08:00.0 확인

cd /sys/bus/pci/devices 
ll <- PCI 디바이스 목록 확인

cat /sys/bus/pci/devices/0000\:08\:00.0/numa_node <- 디바이스 번호에 맞게 NUMA 상태 확인 (-1 이면 비정상)

echo 0 | sudo tee -a /sys/bus/pci/devices/0000\:08\:00.0/numa_node <- NUMA 할당
cat /sys/bus/pci/devices/0000\:08\:00.0/numa_node <- NUMA 할당 확인 (0이 정상)
재부팅시 해제되는 옵션이므로 sudo 권한으로 자동스크립트에 올리거나 매번 수동 실행시켜야 함

# nvidia GPU 전력제한
sudo nvidia-smi -i 0 -pl (와트단위)

RTX 3090 : 420W -> 320W 에서 74도 내외 LLM 파인튜닝 속도 -10% 정도

# 텐서플로우(and cuda) pip 설치
pip install -U "tensorflow[and-cuda]" (==2.15.1)

# 파이토치 설치
pip install torch torchvision torchaudio